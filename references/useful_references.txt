Sammlung von Sourcen zum Bearbeiten von TIFF-Dateien:
https://www.imnc.in2p3.fr/pagesperso/deroulers/software/largetifftools/

Programm zum anzeigen von GeoTiff Dateien:
https://sourceforge.net/projects/openev/

Terrainmodell zur Verwendung:
http://data.opendataportal.at/dataset/dtm-germany
und konkret:
http://data.opendataportal.at/dataset/dtm-germany/resource/08d8c183-a4cc-4a7b-84a0-d03f92076ed3

Tags for TIFF, DNG, and Related Specifications:
https://www.loc.gov/preservation/digital/formats/content/tiff_tags.shtml

GeoTIFF SPecification: GeoTIFF, Revision 1.0
https://www.loc.gov/preservation/digital/formats/fdd/fdd000279.shtml

GeoTIFF Coordinate Transformation
http://web.archive.org/web/20160327150030/http://www.remotesensing.org/geotiff/spec/geotiff2.6.html#2.6

GDAL explains it a little bit here: http://www.gdal.org/osr_tutorial.html

http://www.geos.ed.ac.uk/~smudd/TopoTutorials/html/tutorial_raster_conversion.html

OpenStreetmap uses the WGS84 coordinate system: http://wiki.openstreetmap.org/wiki/Converting_to_WGS84
To handle GeoObjects, the GeoJSON format is quite popular: http://wiki.openstreetmap.org/wiki/GeoJSON
To play around with geoJSON have a look at: http://geojson.io/
GeoJSON Primer: https://macwright.org/2015/03/23/geojson-second-bite.html

To handle all the JSON stuff in our C++ code, we should use https://github.com/nlohmann/json

To merge overlapping polygons into a single union, have a look at
	- turf: https://github.com/Turfjs/turf
	- mapshaper: https://www.npmjs.com/package/mapshaper

Interface Node.js with C++ code using buffers: https://community.risingstack.com/using-buffers-node-js-c-plus-plus/


RESTful API in C++; simple libraries:
- a very simple library for using web services and REST witin C++: https://github.com/pdumais/dumaislib
- HTTP REST framework in C for embedded systems https://www.hackster.io/babelouest/http-rest-framework-in-c-for-embedded-systems-d34b0c
- Restbed: looks like a kind of full fledged REST-API library: https://github.com/corvusoft/restbed
- ngrest: looks very promising, however, I'm not quite sure how to embed this accurately within our app. I'd like to get rid of the ngrest runner: https://github.com/loentar/ngrest

Ract and Websockets (for receiving Updates): https://blog.pusher.com/making-reactjs-realtime-with-websockets/

